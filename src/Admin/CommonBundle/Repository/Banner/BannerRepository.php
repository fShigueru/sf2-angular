<?php

namespace Admin\CommonBundle\Repository\Banner;

use Doctrine\ORM\EntityRepository;

/**
 * BannerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BannerRepository extends EntityRepository implements IBannerRepository
{

    public function getLocalBannerUsados()
    {
        return $this
            ->createQueryBuilder("b")
            ->select("l.id")
            ->leftjoin('b.local', 'l')
            ->getQuery()
            //->useResultCache(true)
            ->getArrayResult()
        ;
    }

    public function getLocalBannerUsadosNotInId($entity)
    {
        return $this
            ->createQueryBuilder("b")
            ->select("l.id")
            ->leftjoin('b.local', 'l')
            ->where("b.id != :id")
            ->setParameter("id", $entity->getId())
            ->getQuery()
            //->useResultCache(true)
            ->getArrayResult()
            ;
    }

    /**
     * Pega o local dos banners que nÃ£o estiverem sendo usados pelos banners
     * @return mixed
     */
    public function getLocalBannerNaoUsados()
    {
        $ids = $this
            ->createQueryBuilder("b")
            ->select("l.id")
            ->leftjoin('b.local', 'l')
            ->getQuery()
            //->useResultCache(true)
            ->getArrayResult()
            ;

        return $this->createQueryBuilder('AdminCommonBundle:LocalBanner')
            ->select('DISTINCT l.id')
            ->from('AdminCommonBundle:LocalBanner', 'l')
            ->where("l.id NOT IN (:banners)")
            ->setParameter(":banners",$ids)
            ->getQuery()
            ->getArrayResult()
        ;


    }
}
